<%- include('../partials/header') %>

<ul class="nav nav-tabs mb-4">
    <li class="nav-item">
        <a
            class="nav-link active"
            id="pets-tab"
            data-bs-toggle="tab"
            href="#pets"
            >My Pets</a
        >
    </li>
    <li class="nav-item">
        <a
            class="nav-link"
            id="appointments-tab"
            data-bs-toggle="tab"
            href="#appointments"
            >My Appointments</a
        >
    </li>
</ul>

<div class="tab-content">
    <div class="tab-pane fade show active" id="pets">
        <div class="row">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Add New Pet</h5>
                        <form id="addPetForm">
                            <div class="mb-3">
                                <label>Pet Name</label>
                                <input
                                    type="text"
                                    name="name"
                                    class="form-control"
                                    required
                                />
                            </div>
                            <div class="mb-3">
                                <label>Type</label>
                                <select
                                    name="type"
                                    class="form-control"
                                    required
                                >
                                    <option value="Dog">Dog</option>
                                    <option value="Cat">Cat</option>
                                    <option value="Bird">Bird</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label>Image</label>
                                <input
                                    type="file"
                                    name="image"
                                    class="form-control"
                                    accept="image/*"
                                />
                            </div>
                            <button type="submit" class="btn btn-primary">
                                Add Pet
                            </button>
                        </form>
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div id="petsList" class="row"></div>
            </div>
        </div>
    </div>

    <div class="tab-pane fade" id="appointments">
        <h4>My Appointments</h4>
        <div id="appointmentsList"></div>
    </div>
</div>

<!-- Book Appointment Modal -->
<div class="modal fade" id="bookAppointmentModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Book Appointment</h5>
                <button
                    type="button"
                    class="btn-close"
                    data-bs-dismiss="modal"
                ></button>
            </div>
            <div class="modal-body">
                <form id="bookAppointmentForm">
                    <input type="hidden" name="petId" id="appointmentPetId" />
                    <div class="mb-3">
                        <label>Date</label>
                        <input
                            type="datetime-local"
                            name="date"
                            class="form-control"
                            required
                        />
                    </div>
                    <div class="mb-3">
                        <label>Description</label>
                        <textarea
                            name="description"
                            class="form-control"
                            required
                        ></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Book</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    const token = localStorage.getItem("token");
    const headers = {
        Authorization: `Bearer ${token}`,
        "Content-Type": "application/json",
    };

    async function loadPets() {
        const response = await fetch("/graphql", {
            method: "POST",
            headers,
            body: JSON.stringify({
                query: `
                query {
                    pets {
                        id
                        name
                        type
                        image
                    }
                }
            `,
            }),
        });
        const { data } = await response.json();

        document.getElementById("petsList").innerHTML = data.pets
            .map(
                (pet, index) => `
                <div class="col-md-6 mb-3 slide-up" style="animation-delay: ${
                    index * 0.1
                }s">
                    <div class="card h-100">
                        <div class="pet-image-container" style="height: 200px; overflow: hidden;">
                            ${
                                pet.image
                                    ? `<img src="/uploads/${pet.image}" class="card-img-top" alt="${pet.name}" style="width: 100%; height: 100%; object-fit: cover;">`
                                    : `<div class="d-flex align-items-center justify-content-center h-100 bg-light">
                                    <i class="fas fa-paw fa-3x text-muted"></i>
                                   </div>`
                            }
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">${pet.name}</h5>
                            <p class="card-text"><span class="badge bg-secondary">${
                                pet.type
                            }</span></p>
                            <div class="btn-group w-100 mt-2">
                                <button onclick="bookAppointment('${
                                    pet.id
                                }')" class="btn btn-primary">
                                    <i class="fas fa-calendar-plus"></i> Book
                                </button>
                                <button onclick="deletePet('${
                                    pet.id
                                }')" class="btn btn-outline-danger">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            `
            )
            .join("");
    }

    async function loadAppointments() {
        const response = await fetch("/graphql", {
            method: "POST",
            headers,
            body: JSON.stringify({
                query: `
                query {
                    appointments {
                        id
                        date
                        description
                        status
                        pet {
                            name
                            type
                            image
                        }
                    }
                }
            `,
            }),
        });
        const { data } = await response.json();

        document.getElementById("appointmentsList").innerHTML =
            data.appointments
                .map(
                    (apt) => `
                <div class="card mb-3 slide-up">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-md-2">
                                ${
                                    apt.pet.image
                                        ? `<img src="/uploads/${apt.pet.image}" class="img-fluid rounded" alt="${apt.pet.name}">`
                                        : `<div class="text-center"><i class="fas fa-paw fa-2x text-muted"></i></div>`
                                }
                            </div>
                            <div class="col-md-10">
                                <h5>Pet: ${
                                    apt.pet.name
                                } <span class="badge bg-secondary">${
                        apt.pet.type
                    }</span></h5>
                                <p class="mb-1"><i class="far fa-calendar-alt me-2"></i>${new Date(
                                    parseInt(apt.date)
                                ).toLocaleString()}</p>
                                <p class="mb-2"><i class="far fa-comment-alt me-2"></i>${
                                    apt.description
                                }</p>
                                <span class="badge bg-${
                                    apt.status === "confirmed"
                                        ? "success"
                                        : apt.status === "cancelled"
                                        ? "danger"
                                        : "warning"
                                }">${apt.status}</span>
                            </div>
                        </div>
                    </div>
                </div>
            `
                )
                .join("");
    }

    // Initialize both tabs
    loadPets();
    loadAppointments();

    // Event Handlers
    document.getElementById("addPetForm").onsubmit = async (e) => {
        e.preventDefault();
        const formData = new FormData(e.target);

        try {
            const operations = {
                query: `
                    mutation AddPet($name: String!, $type: String!, $file: Upload) {
                        addPet(name: $name, type: $type, image: $file) {
                            id
                            name
                            type
                            image
                        }
                    }
                `,
                variables: {
                    name: formData.get("name"),
                    type: formData.get("type"),
                    file: null,
                },
            };

            const map = {
                0: ["variables.file"],
            };

            const uploadFormData = new FormData();
            uploadFormData.append("operations", JSON.stringify(operations));
            uploadFormData.append("map", JSON.stringify(map));
            uploadFormData.append("0", formData.get("image"));

            const response = await fetch("/graphql", {
                method: "POST",
                headers: {
                    Authorization: `Bearer ${token}`,
                },
                body: uploadFormData,
            });

            const { data, errors } = await response.json();

            if (errors) {
                console.error("GraphQL errors:", errors);
                alert(errors[0].message);
                return;
            }

            if (data.addPet) {
                e.target.reset();
                await loadPets();
                alert("Pet added successfully!");
            }
        } catch (err) {
            console.error("Error adding pet:", err);
            alert("Failed to add pet. Please try again.");
        }
    };

    function bookAppointment(petId) {
        document.getElementById("appointmentPetId").value = petId;
        new bootstrap.Modal(
            document.getElementById("bookAppointmentModal")
        ).show();
    }

    document.getElementById("bookAppointmentForm").onsubmit = async (e) => {
        e.preventDefault();
        const formData = new FormData(e.target);

        try {
            const response = await fetch("/graphql", {
                method: "POST",
                headers,
                body: JSON.stringify({
                    query: `
                    mutation BookAppointment($petId: ID!, $date: String!, $description: String!) {
                        bookAppointment(petId: $petId, date: $date, description: $description) {
                            id
                            date
                            status
                        }
                    }
                `,
                    variables: {
                        petId: formData.get("petId"),
                        date: new Date(formData.get("date"))
                            .getTime()
                            .toString(),
                        description: formData.get("description"),
                    },
                }),
            });

            const { data, errors } = await response.json();

            if (errors) {
                alert("Failed to book appointment: " + errors[0].message);
                return;
            }

            if (data.bookAppointment) {
                bootstrap.Modal.getInstance(
                    document.getElementById("bookAppointmentModal")
                ).hide();
                e.target.reset();
                await loadAppointments();
                alert("Appointment booked successfully!");
            }
        } catch (err) {
            console.error("Error booking appointment:", err);
            alert("Failed to book appointment. Please try again.");
        }
    };

    async function deletePet(id) {
        if (!confirm("Are you sure you want to delete this pet?")) return;

        await fetch("/graphql", {
            method: "POST",
            headers,
            body: JSON.stringify({
                query: `
                mutation DeletePet($id: ID!) {
                    deletePet(id: $id)
                }
            `,
                variables: { id },
            }),
        });

        loadPets();
    }
</script>

<%- include('../partials/footer') %>
